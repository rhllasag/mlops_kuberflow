apiVersion: v1
kind: Service
metadata:
  name: mlflow
  labels:
    app: mlflow
spec:
  type: NodePort # Use NodePort or ClusterIP if LoadBalancer is not available
  selector:
    app: mlflow
  ports:
  - protocol: "TCP"
    # Port accessible inside cluster
    port: 80
    # Port to forward to inside the pod
    targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      containers:
      - image: rhllasag/model-registry:latest # Use your Docker image
        name: mlflow
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            memory: "1500Mi"
            cpu: "1500m"
          limits:
            memory: "5Gi"
            cpu: "4"
        volumeMounts:
        - name: mlflow-pvc
          mountPath: /mlflow
      volumes:
      - name: mlflow-pvc
        persistentVolumeClaim:
          claimName: mlflow-pvc
